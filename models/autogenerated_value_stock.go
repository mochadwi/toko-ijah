package models

import (
	"fmt"
	"time"

	"github.com/jinzhu/gorm"
)

// ===== BEGIN of all query sets

// ===== BEGIN of query set ValueStockQuerySet

// ValueStockQuerySet is an queryset type for ValueStock
type ValueStockQuerySet struct {
	db *gorm.DB
}

// NewValueStockQuerySet constructs new ValueStockQuerySet
func NewValueStockQuerySet(db *gorm.DB) ValueStockQuerySet {
	return ValueStockQuerySet{
		db: db.Model(&ValueStock{}),
	}
}

func (qs ValueStockQuerySet) w(db *gorm.DB) ValueStockQuerySet {
	return NewValueStockQuerySet(db)
}

// All is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) All(ret *[]ValueStock) error {
	return qs.db.Find(ret).Error
}

// AvgPurchasesEq is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) AvgPurchasesEq(avgPurchases uint) ValueStockQuerySet {
	return qs.w(qs.db.Where("avg_purchases = ?", avgPurchases))
}

// AvgPurchasesGt is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) AvgPurchasesGt(avgPurchases uint) ValueStockQuerySet {
	return qs.w(qs.db.Where("avg_purchases > ?", avgPurchases))
}

// AvgPurchasesGte is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) AvgPurchasesGte(avgPurchases uint) ValueStockQuerySet {
	return qs.w(qs.db.Where("avg_purchases >= ?", avgPurchases))
}

// AvgPurchasesIn is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) AvgPurchasesIn(avgPurchases uint, avgPurchasesRest ...uint) ValueStockQuerySet {
	iArgs := []interface{}{avgPurchases}
	for _, arg := range avgPurchasesRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("avg_purchases IN (?)", iArgs))
}

// AvgPurchasesLt is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) AvgPurchasesLt(avgPurchases uint) ValueStockQuerySet {
	return qs.w(qs.db.Where("avg_purchases < ?", avgPurchases))
}

// AvgPurchasesLte is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) AvgPurchasesLte(avgPurchases uint) ValueStockQuerySet {
	return qs.w(qs.db.Where("avg_purchases <= ?", avgPurchases))
}

// AvgPurchasesNe is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) AvgPurchasesNe(avgPurchases uint) ValueStockQuerySet {
	return qs.w(qs.db.Where("avg_purchases != ?", avgPurchases))
}

// AvgPurchasesNotIn is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) AvgPurchasesNotIn(avgPurchases uint, avgPurchasesRest ...uint) ValueStockQuerySet {
	iArgs := []interface{}{avgPurchases}
	for _, arg := range avgPurchasesRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("avg_purchases NOT IN (?)", iArgs))
}

// Count is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) Count() (int, error) {
	var count int
	err := qs.db.Count(&count).Error
	return count, err
}

// Create is an autogenerated method
// nolint: dupl
func (o *ValueStock) Create(db *gorm.DB) error {
	return db.Create(o).Error
}

// CreatedAtEq is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) CreatedAtEq(createdAt time.Time) ValueStockQuerySet {
	return qs.w(qs.db.Where("created_at = ?", createdAt))
}

// CreatedAtGt is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) CreatedAtGt(createdAt time.Time) ValueStockQuerySet {
	return qs.w(qs.db.Where("created_at > ?", createdAt))
}

// CreatedAtGte is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) CreatedAtGte(createdAt time.Time) ValueStockQuerySet {
	return qs.w(qs.db.Where("created_at >= ?", createdAt))
}

// CreatedAtLt is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) CreatedAtLt(createdAt time.Time) ValueStockQuerySet {
	return qs.w(qs.db.Where("created_at < ?", createdAt))
}

// CreatedAtLte is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) CreatedAtLte(createdAt time.Time) ValueStockQuerySet {
	return qs.w(qs.db.Where("created_at <= ?", createdAt))
}

// CreatedAtNe is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) CreatedAtNe(createdAt time.Time) ValueStockQuerySet {
	return qs.w(qs.db.Where("created_at != ?", createdAt))
}

// Delete is an autogenerated method
// nolint: dupl
func (o *ValueStock) Delete(db *gorm.DB) error {
	return db.Delete(o).Error
}

// Delete is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) Delete() error {
	return qs.db.Delete(ValueStock{}).Error
}

// DeletedAtEq is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) DeletedAtEq(deletedAt time.Time) ValueStockQuerySet {
	return qs.w(qs.db.Where("deleted_at = ?", deletedAt))
}

// DeletedAtGt is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) DeletedAtGt(deletedAt time.Time) ValueStockQuerySet {
	return qs.w(qs.db.Where("deleted_at > ?", deletedAt))
}

// DeletedAtGte is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) DeletedAtGte(deletedAt time.Time) ValueStockQuerySet {
	return qs.w(qs.db.Where("deleted_at >= ?", deletedAt))
}

// DeletedAtIsNotNull is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) DeletedAtIsNotNull() ValueStockQuerySet {
	return qs.w(qs.db.Where("deleted_at IS NOT NULL"))
}

// DeletedAtIsNull is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) DeletedAtIsNull() ValueStockQuerySet {
	return qs.w(qs.db.Where("deleted_at IS NULL"))
}

// DeletedAtLt is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) DeletedAtLt(deletedAt time.Time) ValueStockQuerySet {
	return qs.w(qs.db.Where("deleted_at < ?", deletedAt))
}

// DeletedAtLte is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) DeletedAtLte(deletedAt time.Time) ValueStockQuerySet {
	return qs.w(qs.db.Where("deleted_at <= ?", deletedAt))
}

// DeletedAtNe is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) DeletedAtNe(deletedAt time.Time) ValueStockQuerySet {
	return qs.w(qs.db.Where("deleted_at != ?", deletedAt))
}

// FinalStockEq is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) FinalStockEq(finalStock uint) ValueStockQuerySet {
	return qs.w(qs.db.Where("final_stock = ?", finalStock))
}

// FinalStockGt is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) FinalStockGt(finalStock uint) ValueStockQuerySet {
	return qs.w(qs.db.Where("final_stock > ?", finalStock))
}

// FinalStockGte is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) FinalStockGte(finalStock uint) ValueStockQuerySet {
	return qs.w(qs.db.Where("final_stock >= ?", finalStock))
}

// FinalStockIn is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) FinalStockIn(finalStock uint, finalStockRest ...uint) ValueStockQuerySet {
	iArgs := []interface{}{finalStock}
	for _, arg := range finalStockRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("final_stock IN (?)", iArgs))
}

// FinalStockLt is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) FinalStockLt(finalStock uint) ValueStockQuerySet {
	return qs.w(qs.db.Where("final_stock < ?", finalStock))
}

// FinalStockLte is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) FinalStockLte(finalStock uint) ValueStockQuerySet {
	return qs.w(qs.db.Where("final_stock <= ?", finalStock))
}

// FinalStockNe is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) FinalStockNe(finalStock uint) ValueStockQuerySet {
	return qs.w(qs.db.Where("final_stock != ?", finalStock))
}

// FinalStockNotIn is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) FinalStockNotIn(finalStock uint, finalStockRest ...uint) ValueStockQuerySet {
	iArgs := []interface{}{finalStock}
	for _, arg := range finalStockRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("final_stock NOT IN (?)", iArgs))
}

// GetUpdater is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) GetUpdater() ValueStockUpdater {
	return NewValueStockUpdater(qs.db)
}

// IDEq is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) IDEq(ID uint) ValueStockQuerySet {
	return qs.w(qs.db.Where("id = ?", ID))
}

// IDGt is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) IDGt(ID uint) ValueStockQuerySet {
	return qs.w(qs.db.Where("id > ?", ID))
}

// IDGte is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) IDGte(ID uint) ValueStockQuerySet {
	return qs.w(qs.db.Where("id >= ?", ID))
}

// IDIn is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) IDIn(ID uint, IDRest ...uint) ValueStockQuerySet {
	iArgs := []interface{}{ID}
	for _, arg := range IDRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("id IN (?)", iArgs))
}

// IDLt is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) IDLt(ID uint) ValueStockQuerySet {
	return qs.w(qs.db.Where("id < ?", ID))
}

// IDLte is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) IDLte(ID uint) ValueStockQuerySet {
	return qs.w(qs.db.Where("id <= ?", ID))
}

// IDNe is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) IDNe(ID uint) ValueStockQuerySet {
	return qs.w(qs.db.Where("id != ?", ID))
}

// IDNotIn is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) IDNotIn(ID uint, IDRest ...uint) ValueStockQuerySet {
	iArgs := []interface{}{ID}
	for _, arg := range IDRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("id NOT IN (?)", iArgs))
}

// Limit is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) Limit(limit int) ValueStockQuerySet {
	return qs.w(qs.db.Limit(limit))
}

// NameEq is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) NameEq(name string) ValueStockQuerySet {
	return qs.w(qs.db.Where("name = ?", name))
}

// NameIn is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) NameIn(name string, nameRest ...string) ValueStockQuerySet {
	iArgs := []interface{}{name}
	for _, arg := range nameRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("name IN (?)", iArgs))
}

// NameNe is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) NameNe(name string) ValueStockQuerySet {
	return qs.w(qs.db.Where("name != ?", name))
}

// NameNotIn is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) NameNotIn(name string, nameRest ...string) ValueStockQuerySet {
	iArgs := []interface{}{name}
	for _, arg := range nameRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("name NOT IN (?)", iArgs))
}

// One is used to retrieve one result. It returns gorm.ErrRecordNotFound
// if nothing was fetched
func (qs ValueStockQuerySet) One(ret *ValueStock) error {
	return qs.db.First(ret).Error
}

// OrderAscByAvgPurchases is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) OrderAscByAvgPurchases() ValueStockQuerySet {
	return qs.w(qs.db.Order("avg_purchases ASC"))
}

// OrderAscByCreatedAt is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) OrderAscByCreatedAt() ValueStockQuerySet {
	return qs.w(qs.db.Order("created_at ASC"))
}

// OrderAscByDeletedAt is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) OrderAscByDeletedAt() ValueStockQuerySet {
	return qs.w(qs.db.Order("deleted_at ASC"))
}

// OrderAscByFinalStock is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) OrderAscByFinalStock() ValueStockQuerySet {
	return qs.w(qs.db.Order("final_stock ASC"))
}

// OrderAscByID is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) OrderAscByID() ValueStockQuerySet {
	return qs.w(qs.db.Order("id ASC"))
}

// OrderAscByTotal is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) OrderAscByTotal() ValueStockQuerySet {
	return qs.w(qs.db.Order("total ASC"))
}

// OrderAscByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) OrderAscByUpdatedAt() ValueStockQuerySet {
	return qs.w(qs.db.Order("updated_at ASC"))
}

// OrderDescByAvgPurchases is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) OrderDescByAvgPurchases() ValueStockQuerySet {
	return qs.w(qs.db.Order("avg_purchases DESC"))
}

// OrderDescByCreatedAt is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) OrderDescByCreatedAt() ValueStockQuerySet {
	return qs.w(qs.db.Order("created_at DESC"))
}

// OrderDescByDeletedAt is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) OrderDescByDeletedAt() ValueStockQuerySet {
	return qs.w(qs.db.Order("deleted_at DESC"))
}

// OrderDescByFinalStock is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) OrderDescByFinalStock() ValueStockQuerySet {
	return qs.w(qs.db.Order("final_stock DESC"))
}

// OrderDescByID is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) OrderDescByID() ValueStockQuerySet {
	return qs.w(qs.db.Order("id DESC"))
}

// OrderDescByTotal is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) OrderDescByTotal() ValueStockQuerySet {
	return qs.w(qs.db.Order("total DESC"))
}

// OrderDescByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) OrderDescByUpdatedAt() ValueStockQuerySet {
	return qs.w(qs.db.Order("updated_at DESC"))
}

// SKUEq is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) SKUEq(sKU string) ValueStockQuerySet {
	return qs.w(qs.db.Where("sku = ?", sKU))
}

// SKUIn is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) SKUIn(sKU string, sKURest ...string) ValueStockQuerySet {
	iArgs := []interface{}{sKU}
	for _, arg := range sKURest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("sku IN (?)", iArgs))
}

// SKUNe is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) SKUNe(sKU string) ValueStockQuerySet {
	return qs.w(qs.db.Where("sku != ?", sKU))
}

// SKUNotIn is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) SKUNotIn(sKU string, sKURest ...string) ValueStockQuerySet {
	iArgs := []interface{}{sKU}
	for _, arg := range sKURest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("sku NOT IN (?)", iArgs))
}

// SetAvgPurchases is an autogenerated method
// nolint: dupl
func (u ValueStockUpdater) SetAvgPurchases(avgPurchases uint) ValueStockUpdater {
	u.fields[string(ValueStockDBSchema.AvgPurchases)] = avgPurchases
	return u
}

// SetCreatedAt is an autogenerated method
// nolint: dupl
func (u ValueStockUpdater) SetCreatedAt(createdAt time.Time) ValueStockUpdater {
	u.fields[string(ValueStockDBSchema.CreatedAt)] = createdAt
	return u
}

// SetDeletedAt is an autogenerated method
// nolint: dupl
func (u ValueStockUpdater) SetDeletedAt(deletedAt *time.Time) ValueStockUpdater {
	u.fields[string(ValueStockDBSchema.DeletedAt)] = deletedAt
	return u
}

// SetFinalStock is an autogenerated method
// nolint: dupl
func (u ValueStockUpdater) SetFinalStock(finalStock uint) ValueStockUpdater {
	u.fields[string(ValueStockDBSchema.FinalStock)] = finalStock
	return u
}

// SetID is an autogenerated method
// nolint: dupl
func (u ValueStockUpdater) SetID(ID uint) ValueStockUpdater {
	u.fields[string(ValueStockDBSchema.ID)] = ID
	return u
}

// SetName is an autogenerated method
// nolint: dupl
func (u ValueStockUpdater) SetName(name string) ValueStockUpdater {
	u.fields[string(ValueStockDBSchema.Name)] = name
	return u
}

// SetSKU is an autogenerated method
// nolint: dupl
func (u ValueStockUpdater) SetSKU(sKU string) ValueStockUpdater {
	u.fields[string(ValueStockDBSchema.SKU)] = sKU
	return u
}

// SetTotal is an autogenerated method
// nolint: dupl
func (u ValueStockUpdater) SetTotal(total uint) ValueStockUpdater {
	u.fields[string(ValueStockDBSchema.Total)] = total
	return u
}

// SetUpdatedAt is an autogenerated method
// nolint: dupl
func (u ValueStockUpdater) SetUpdatedAt(updatedAt time.Time) ValueStockUpdater {
	u.fields[string(ValueStockDBSchema.UpdatedAt)] = updatedAt
	return u
}

// TotalEq is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) TotalEq(total uint) ValueStockQuerySet {
	return qs.w(qs.db.Where("total = ?", total))
}

// TotalGt is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) TotalGt(total uint) ValueStockQuerySet {
	return qs.w(qs.db.Where("total > ?", total))
}

// TotalGte is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) TotalGte(total uint) ValueStockQuerySet {
	return qs.w(qs.db.Where("total >= ?", total))
}

// TotalIn is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) TotalIn(total uint, totalRest ...uint) ValueStockQuerySet {
	iArgs := []interface{}{total}
	for _, arg := range totalRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("total IN (?)", iArgs))
}

// TotalLt is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) TotalLt(total uint) ValueStockQuerySet {
	return qs.w(qs.db.Where("total < ?", total))
}

// TotalLte is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) TotalLte(total uint) ValueStockQuerySet {
	return qs.w(qs.db.Where("total <= ?", total))
}

// TotalNe is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) TotalNe(total uint) ValueStockQuerySet {
	return qs.w(qs.db.Where("total != ?", total))
}

// TotalNotIn is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) TotalNotIn(total uint, totalRest ...uint) ValueStockQuerySet {
	iArgs := []interface{}{total}
	for _, arg := range totalRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("total NOT IN (?)", iArgs))
}

// Update is an autogenerated method
// nolint: dupl
func (u ValueStockUpdater) Update() error {
	return u.db.Updates(u.fields).Error
}

// UpdateNum is an autogenerated method
// nolint: dupl
func (u ValueStockUpdater) UpdateNum() (int64, error) {
	db := u.db.Updates(u.fields)
	return db.RowsAffected, db.Error
}

// UpdatedAtEq is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) UpdatedAtEq(updatedAt time.Time) ValueStockQuerySet {
	return qs.w(qs.db.Where("updated_at = ?", updatedAt))
}

// UpdatedAtGt is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) UpdatedAtGt(updatedAt time.Time) ValueStockQuerySet {
	return qs.w(qs.db.Where("updated_at > ?", updatedAt))
}

// UpdatedAtGte is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) UpdatedAtGte(updatedAt time.Time) ValueStockQuerySet {
	return qs.w(qs.db.Where("updated_at >= ?", updatedAt))
}

// UpdatedAtLt is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) UpdatedAtLt(updatedAt time.Time) ValueStockQuerySet {
	return qs.w(qs.db.Where("updated_at < ?", updatedAt))
}

// UpdatedAtLte is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) UpdatedAtLte(updatedAt time.Time) ValueStockQuerySet {
	return qs.w(qs.db.Where("updated_at <= ?", updatedAt))
}

// UpdatedAtNe is an autogenerated method
// nolint: dupl
func (qs ValueStockQuerySet) UpdatedAtNe(updatedAt time.Time) ValueStockQuerySet {
	return qs.w(qs.db.Where("updated_at != ?", updatedAt))
}

// ===== END of query set ValueStockQuerySet

// ===== BEGIN of ValueStock modifiers

type valueStockDBSchemaField string

func (f valueStockDBSchemaField) String() string {
	return string(f)
}

// ValueStockDBSchema stores db field names of ValueStock
var ValueStockDBSchema = struct {
	ID           valueStockDBSchemaField
	SKU          valueStockDBSchemaField
	Name         valueStockDBSchemaField
	CreatedAt    valueStockDBSchemaField
	UpdatedAt    valueStockDBSchemaField
	DeletedAt    valueStockDBSchemaField
	FinalStock   valueStockDBSchemaField
	AvgPurchases valueStockDBSchemaField
	Total        valueStockDBSchemaField
}{

	ID:           valueStockDBSchemaField("id"),
	SKU:          valueStockDBSchemaField("sku"),
	Name:         valueStockDBSchemaField("name"),
	CreatedAt:    valueStockDBSchemaField("created_at"),
	UpdatedAt:    valueStockDBSchemaField("updated_at"),
	DeletedAt:    valueStockDBSchemaField("deleted_at"),
	FinalStock:   valueStockDBSchemaField("final_stock"),
	AvgPurchases: valueStockDBSchemaField("avg_purchases"),
	Total:        valueStockDBSchemaField("total"),
}

// Update updates ValueStock fields by primary key
func (o *ValueStock) Update(db *gorm.DB, fields ...valueStockDBSchemaField) error {
	dbNameToFieldName := map[string]interface{}{
		"id":            o.ID,
		"sku":           o.SKU,
		"name":          o.Name,
		"created_at":    o.CreatedAt,
		"updated_at":    o.UpdatedAt,
		"deleted_at":    o.DeletedAt,
		"final_stock":   o.FinalStock,
		"avg_purchases": o.AvgPurchases,
		"total":         o.Total,
	}
	u := map[string]interface{}{}
	for _, f := range fields {
		fs := f.String()
		u[fs] = dbNameToFieldName[fs]
	}
	if err := db.Model(o).Updates(u).Error; err != nil {
		if err == gorm.ErrRecordNotFound {
			return err
		}

		return fmt.Errorf("can't update ValueStock %v fields %v: %s",
			o, fields, err)
	}

	return nil
}

// ValueStockUpdater is an ValueStock updates manager
type ValueStockUpdater struct {
	fields map[string]interface{}
	db     *gorm.DB
}

// NewValueStockUpdater creates new ValueStock updater
func NewValueStockUpdater(db *gorm.DB) ValueStockUpdater {
	return ValueStockUpdater{
		fields: map[string]interface{}{},
		db:     db.Model(&ValueStock{}),
	}
}

// ===== END of ValueStock modifiers

// ===== END of all query sets
