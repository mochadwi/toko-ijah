package models

import (
	"fmt"
	"time"

	"github.com/jinzhu/gorm"
)

// ===== BEGIN of all query sets

// ===== BEGIN of query set IncomeStockRequestQuerySet

// IncomeStockRequestQuerySet is an queryset type for IncomeStockRequest
type IncomeStockRequestQuerySet struct {
	db *gorm.DB
}

// NewIncomeStockRequestQuerySet constructs new IncomeStockRequestQuerySet
func NewIncomeStockRequestQuerySet(db *gorm.DB) IncomeStockRequestQuerySet {
	return IncomeStockRequestQuerySet{
		db: db.Model(&IncomeStockRequest{}),
	}
}

func (qs IncomeStockRequestQuerySet) w(db *gorm.DB) IncomeStockRequestQuerySet {
	return NewIncomeStockRequestQuerySet(db)
}

// All is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) All(ret *[]IncomeStockRequest) error {
	return qs.db.Find(ret).Error
}

// AmountReceivedEq is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) AmountReceivedEq(amountReceived uint) IncomeStockRequestQuerySet {
	return qs.w(qs.db.Where("amount_received = ?", amountReceived))
}

// AmountReceivedGt is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) AmountReceivedGt(amountReceived uint) IncomeStockRequestQuerySet {
	return qs.w(qs.db.Where("amount_received > ?", amountReceived))
}

// AmountReceivedGte is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) AmountReceivedGte(amountReceived uint) IncomeStockRequestQuerySet {
	return qs.w(qs.db.Where("amount_received >= ?", amountReceived))
}

// AmountReceivedIn is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) AmountReceivedIn(amountReceived uint, amountReceivedRest ...uint) IncomeStockRequestQuerySet {
	iArgs := []interface{}{amountReceived}
	for _, arg := range amountReceivedRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("amount_received IN (?)", iArgs))
}

// AmountReceivedLt is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) AmountReceivedLt(amountReceived uint) IncomeStockRequestQuerySet {
	return qs.w(qs.db.Where("amount_received < ?", amountReceived))
}

// AmountReceivedLte is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) AmountReceivedLte(amountReceived uint) IncomeStockRequestQuerySet {
	return qs.w(qs.db.Where("amount_received <= ?", amountReceived))
}

// AmountReceivedNe is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) AmountReceivedNe(amountReceived uint) IncomeStockRequestQuerySet {
	return qs.w(qs.db.Where("amount_received != ?", amountReceived))
}

// AmountReceivedNotIn is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) AmountReceivedNotIn(amountReceived uint, amountReceivedRest ...uint) IncomeStockRequestQuerySet {
	iArgs := []interface{}{amountReceived}
	for _, arg := range amountReceivedRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("amount_received NOT IN (?)", iArgs))
}

// Count is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) Count() (int, error) {
	var count int
	err := qs.db.Count(&count).Error
	return count, err
}

// Create is an autogenerated method
// nolint: dupl
func (o *IncomeStockRequest) Create(db *gorm.DB) error {
	return db.Create(o).Error
}

// CreatedAtEq is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) CreatedAtEq(createdAt time.Time) IncomeStockRequestQuerySet {
	return qs.w(qs.db.Where("created_at = ?", createdAt))
}

// CreatedAtGt is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) CreatedAtGt(createdAt time.Time) IncomeStockRequestQuerySet {
	return qs.w(qs.db.Where("created_at > ?", createdAt))
}

// CreatedAtGte is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) CreatedAtGte(createdAt time.Time) IncomeStockRequestQuerySet {
	return qs.w(qs.db.Where("created_at >= ?", createdAt))
}

// CreatedAtLt is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) CreatedAtLt(createdAt time.Time) IncomeStockRequestQuerySet {
	return qs.w(qs.db.Where("created_at < ?", createdAt))
}

// CreatedAtLte is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) CreatedAtLte(createdAt time.Time) IncomeStockRequestQuerySet {
	return qs.w(qs.db.Where("created_at <= ?", createdAt))
}

// CreatedAtNe is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) CreatedAtNe(createdAt time.Time) IncomeStockRequestQuerySet {
	return qs.w(qs.db.Where("created_at != ?", createdAt))
}

// Delete is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) Delete() error {
	return qs.db.Delete(IncomeStockRequest{}).Error
}

// Delete is an autogenerated method
// nolint: dupl
func (o *IncomeStockRequest) Delete(db *gorm.DB) error {
	return db.Delete(o).Error
}

// DeletedAtEq is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) DeletedAtEq(deletedAt time.Time) IncomeStockRequestQuerySet {
	return qs.w(qs.db.Where("deleted_at = ?", deletedAt))
}

// DeletedAtGt is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) DeletedAtGt(deletedAt time.Time) IncomeStockRequestQuerySet {
	return qs.w(qs.db.Where("deleted_at > ?", deletedAt))
}

// DeletedAtGte is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) DeletedAtGte(deletedAt time.Time) IncomeStockRequestQuerySet {
	return qs.w(qs.db.Where("deleted_at >= ?", deletedAt))
}

// DeletedAtIsNotNull is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) DeletedAtIsNotNull() IncomeStockRequestQuerySet {
	return qs.w(qs.db.Where("deleted_at IS NOT NULL"))
}

// DeletedAtIsNull is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) DeletedAtIsNull() IncomeStockRequestQuerySet {
	return qs.w(qs.db.Where("deleted_at IS NULL"))
}

// DeletedAtLt is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) DeletedAtLt(deletedAt time.Time) IncomeStockRequestQuerySet {
	return qs.w(qs.db.Where("deleted_at < ?", deletedAt))
}

// DeletedAtLte is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) DeletedAtLte(deletedAt time.Time) IncomeStockRequestQuerySet {
	return qs.w(qs.db.Where("deleted_at <= ?", deletedAt))
}

// DeletedAtNe is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) DeletedAtNe(deletedAt time.Time) IncomeStockRequestQuerySet {
	return qs.w(qs.db.Where("deleted_at != ?", deletedAt))
}

// GetUpdater is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) GetUpdater() IncomeStockRequestUpdater {
	return NewIncomeStockRequestUpdater(qs.db)
}

// IDEq is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) IDEq(ID uint) IncomeStockRequestQuerySet {
	return qs.w(qs.db.Where("id = ?", ID))
}

// IDGt is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) IDGt(ID uint) IncomeStockRequestQuerySet {
	return qs.w(qs.db.Where("id > ?", ID))
}

// IDGte is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) IDGte(ID uint) IncomeStockRequestQuerySet {
	return qs.w(qs.db.Where("id >= ?", ID))
}

// IDIn is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) IDIn(ID uint, IDRest ...uint) IncomeStockRequestQuerySet {
	iArgs := []interface{}{ID}
	for _, arg := range IDRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("id IN (?)", iArgs))
}

// IDLt is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) IDLt(ID uint) IncomeStockRequestQuerySet {
	return qs.w(qs.db.Where("id < ?", ID))
}

// IDLte is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) IDLte(ID uint) IncomeStockRequestQuerySet {
	return qs.w(qs.db.Where("id <= ?", ID))
}

// IDNe is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) IDNe(ID uint) IncomeStockRequestQuerySet {
	return qs.w(qs.db.Where("id != ?", ID))
}

// IDNotIn is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) IDNotIn(ID uint, IDRest ...uint) IncomeStockRequestQuerySet {
	iArgs := []interface{}{ID}
	for _, arg := range IDRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("id NOT IN (?)", iArgs))
}

// Limit is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) Limit(limit int) IncomeStockRequestQuerySet {
	return qs.w(qs.db.Limit(limit))
}

// NameEq is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) NameEq(name string) IncomeStockRequestQuerySet {
	return qs.w(qs.db.Where("name = ?", name))
}

// NameIn is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) NameIn(name string, nameRest ...string) IncomeStockRequestQuerySet {
	iArgs := []interface{}{name}
	for _, arg := range nameRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("name IN (?)", iArgs))
}

// NameNe is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) NameNe(name string) IncomeStockRequestQuerySet {
	return qs.w(qs.db.Where("name != ?", name))
}

// NameNotIn is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) NameNotIn(name string, nameRest ...string) IncomeStockRequestQuerySet {
	iArgs := []interface{}{name}
	for _, arg := range nameRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("name NOT IN (?)", iArgs))
}

// NoteEq is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) NoteEq(note string) IncomeStockRequestQuerySet {
	return qs.w(qs.db.Where("note = ?", note))
}

// NoteIn is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) NoteIn(note string, noteRest ...string) IncomeStockRequestQuerySet {
	iArgs := []interface{}{note}
	for _, arg := range noteRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("note IN (?)", iArgs))
}

// NoteNe is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) NoteNe(note string) IncomeStockRequestQuerySet {
	return qs.w(qs.db.Where("note != ?", note))
}

// NoteNotIn is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) NoteNotIn(note string, noteRest ...string) IncomeStockRequestQuerySet {
	iArgs := []interface{}{note}
	for _, arg := range noteRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("note NOT IN (?)", iArgs))
}

// One is used to retrieve one result. It returns gorm.ErrRecordNotFound
// if nothing was fetched
func (qs IncomeStockRequestQuerySet) One(ret *IncomeStockRequest) error {
	return qs.db.First(ret).Error
}

// OrderAmountEq is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) OrderAmountEq(orderAmount uint) IncomeStockRequestQuerySet {
	return qs.w(qs.db.Where("order_amount = ?", orderAmount))
}

// OrderAmountGt is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) OrderAmountGt(orderAmount uint) IncomeStockRequestQuerySet {
	return qs.w(qs.db.Where("order_amount > ?", orderAmount))
}

// OrderAmountGte is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) OrderAmountGte(orderAmount uint) IncomeStockRequestQuerySet {
	return qs.w(qs.db.Where("order_amount >= ?", orderAmount))
}

// OrderAmountIn is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) OrderAmountIn(orderAmount uint, orderAmountRest ...uint) IncomeStockRequestQuerySet {
	iArgs := []interface{}{orderAmount}
	for _, arg := range orderAmountRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("order_amount IN (?)", iArgs))
}

// OrderAmountLt is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) OrderAmountLt(orderAmount uint) IncomeStockRequestQuerySet {
	return qs.w(qs.db.Where("order_amount < ?", orderAmount))
}

// OrderAmountLte is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) OrderAmountLte(orderAmount uint) IncomeStockRequestQuerySet {
	return qs.w(qs.db.Where("order_amount <= ?", orderAmount))
}

// OrderAmountNe is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) OrderAmountNe(orderAmount uint) IncomeStockRequestQuerySet {
	return qs.w(qs.db.Where("order_amount != ?", orderAmount))
}

// OrderAmountNotIn is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) OrderAmountNotIn(orderAmount uint, orderAmountRest ...uint) IncomeStockRequestQuerySet {
	iArgs := []interface{}{orderAmount}
	for _, arg := range orderAmountRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("order_amount NOT IN (?)", iArgs))
}

// OrderAscByAmountReceived is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) OrderAscByAmountReceived() IncomeStockRequestQuerySet {
	return qs.w(qs.db.Order("amount_received ASC"))
}

// OrderAscByCreatedAt is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) OrderAscByCreatedAt() IncomeStockRequestQuerySet {
	return qs.w(qs.db.Order("created_at ASC"))
}

// OrderAscByDeletedAt is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) OrderAscByDeletedAt() IncomeStockRequestQuerySet {
	return qs.w(qs.db.Order("deleted_at ASC"))
}

// OrderAscByID is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) OrderAscByID() IncomeStockRequestQuerySet {
	return qs.w(qs.db.Order("id ASC"))
}

// OrderAscByOrderAmount is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) OrderAscByOrderAmount() IncomeStockRequestQuerySet {
	return qs.w(qs.db.Order("order_amount ASC"))
}

// OrderAscByPurchasePrice is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) OrderAscByPurchasePrice() IncomeStockRequestQuerySet {
	return qs.w(qs.db.Order("purchase_price ASC"))
}

// OrderAscByTime is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) OrderAscByTime() IncomeStockRequestQuerySet {
	return qs.w(qs.db.Order("time ASC"))
}

// OrderAscByTotalPrice is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) OrderAscByTotalPrice() IncomeStockRequestQuerySet {
	return qs.w(qs.db.Order("total_price ASC"))
}

// OrderAscByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) OrderAscByUpdatedAt() IncomeStockRequestQuerySet {
	return qs.w(qs.db.Order("updated_at ASC"))
}

// OrderDescByAmountReceived is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) OrderDescByAmountReceived() IncomeStockRequestQuerySet {
	return qs.w(qs.db.Order("amount_received DESC"))
}

// OrderDescByCreatedAt is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) OrderDescByCreatedAt() IncomeStockRequestQuerySet {
	return qs.w(qs.db.Order("created_at DESC"))
}

// OrderDescByDeletedAt is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) OrderDescByDeletedAt() IncomeStockRequestQuerySet {
	return qs.w(qs.db.Order("deleted_at DESC"))
}

// OrderDescByID is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) OrderDescByID() IncomeStockRequestQuerySet {
	return qs.w(qs.db.Order("id DESC"))
}

// OrderDescByOrderAmount is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) OrderDescByOrderAmount() IncomeStockRequestQuerySet {
	return qs.w(qs.db.Order("order_amount DESC"))
}

// OrderDescByPurchasePrice is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) OrderDescByPurchasePrice() IncomeStockRequestQuerySet {
	return qs.w(qs.db.Order("purchase_price DESC"))
}

// OrderDescByTime is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) OrderDescByTime() IncomeStockRequestQuerySet {
	return qs.w(qs.db.Order("time DESC"))
}

// OrderDescByTotalPrice is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) OrderDescByTotalPrice() IncomeStockRequestQuerySet {
	return qs.w(qs.db.Order("total_price DESC"))
}

// OrderDescByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) OrderDescByUpdatedAt() IncomeStockRequestQuerySet {
	return qs.w(qs.db.Order("updated_at DESC"))
}

// PurchasePriceEq is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) PurchasePriceEq(purchasePrice uint) IncomeStockRequestQuerySet {
	return qs.w(qs.db.Where("purchase_price = ?", purchasePrice))
}

// PurchasePriceGt is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) PurchasePriceGt(purchasePrice uint) IncomeStockRequestQuerySet {
	return qs.w(qs.db.Where("purchase_price > ?", purchasePrice))
}

// PurchasePriceGte is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) PurchasePriceGte(purchasePrice uint) IncomeStockRequestQuerySet {
	return qs.w(qs.db.Where("purchase_price >= ?", purchasePrice))
}

// PurchasePriceIn is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) PurchasePriceIn(purchasePrice uint, purchasePriceRest ...uint) IncomeStockRequestQuerySet {
	iArgs := []interface{}{purchasePrice}
	for _, arg := range purchasePriceRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("purchase_price IN (?)", iArgs))
}

// PurchasePriceLt is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) PurchasePriceLt(purchasePrice uint) IncomeStockRequestQuerySet {
	return qs.w(qs.db.Where("purchase_price < ?", purchasePrice))
}

// PurchasePriceLte is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) PurchasePriceLte(purchasePrice uint) IncomeStockRequestQuerySet {
	return qs.w(qs.db.Where("purchase_price <= ?", purchasePrice))
}

// PurchasePriceNe is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) PurchasePriceNe(purchasePrice uint) IncomeStockRequestQuerySet {
	return qs.w(qs.db.Where("purchase_price != ?", purchasePrice))
}

// PurchasePriceNotIn is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) PurchasePriceNotIn(purchasePrice uint, purchasePriceRest ...uint) IncomeStockRequestQuerySet {
	iArgs := []interface{}{purchasePrice}
	for _, arg := range purchasePriceRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("purchase_price NOT IN (?)", iArgs))
}

// ReceiptNumberEq is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) ReceiptNumberEq(receiptNumber string) IncomeStockRequestQuerySet {
	return qs.w(qs.db.Where("receipt_number = ?", receiptNumber))
}

// ReceiptNumberIn is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) ReceiptNumberIn(receiptNumber string, receiptNumberRest ...string) IncomeStockRequestQuerySet {
	iArgs := []interface{}{receiptNumber}
	for _, arg := range receiptNumberRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("receipt_number IN (?)", iArgs))
}

// ReceiptNumberNe is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) ReceiptNumberNe(receiptNumber string) IncomeStockRequestQuerySet {
	return qs.w(qs.db.Where("receipt_number != ?", receiptNumber))
}

// ReceiptNumberNotIn is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) ReceiptNumberNotIn(receiptNumber string, receiptNumberRest ...string) IncomeStockRequestQuerySet {
	iArgs := []interface{}{receiptNumber}
	for _, arg := range receiptNumberRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("receipt_number NOT IN (?)", iArgs))
}

// SKUEq is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) SKUEq(sKU string) IncomeStockRequestQuerySet {
	return qs.w(qs.db.Where("sku = ?", sKU))
}

// SKUIn is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) SKUIn(sKU string, sKURest ...string) IncomeStockRequestQuerySet {
	iArgs := []interface{}{sKU}
	for _, arg := range sKURest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("sku IN (?)", iArgs))
}

// SKUNe is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) SKUNe(sKU string) IncomeStockRequestQuerySet {
	return qs.w(qs.db.Where("sku != ?", sKU))
}

// SKUNotIn is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) SKUNotIn(sKU string, sKURest ...string) IncomeStockRequestQuerySet {
	iArgs := []interface{}{sKU}
	for _, arg := range sKURest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("sku NOT IN (?)", iArgs))
}

// SetAmountReceived is an autogenerated method
// nolint: dupl
func (u IncomeStockRequestUpdater) SetAmountReceived(amountReceived uint) IncomeStockRequestUpdater {
	u.fields[string(IncomeStockRequestDBSchema.AmountReceived)] = amountReceived
	return u
}

// SetCreatedAt is an autogenerated method
// nolint: dupl
func (u IncomeStockRequestUpdater) SetCreatedAt(createdAt time.Time) IncomeStockRequestUpdater {
	u.fields[string(IncomeStockRequestDBSchema.CreatedAt)] = createdAt
	return u
}

// SetDeletedAt is an autogenerated method
// nolint: dupl
func (u IncomeStockRequestUpdater) SetDeletedAt(deletedAt *time.Time) IncomeStockRequestUpdater {
	u.fields[string(IncomeStockRequestDBSchema.DeletedAt)] = deletedAt
	return u
}

// SetID is an autogenerated method
// nolint: dupl
func (u IncomeStockRequestUpdater) SetID(ID uint) IncomeStockRequestUpdater {
	u.fields[string(IncomeStockRequestDBSchema.ID)] = ID
	return u
}

// SetName is an autogenerated method
// nolint: dupl
func (u IncomeStockRequestUpdater) SetName(name string) IncomeStockRequestUpdater {
	u.fields[string(IncomeStockRequestDBSchema.Name)] = name
	return u
}

// SetNote is an autogenerated method
// nolint: dupl
func (u IncomeStockRequestUpdater) SetNote(note string) IncomeStockRequestUpdater {
	u.fields[string(IncomeStockRequestDBSchema.Note)] = note
	return u
}

// SetOrderAmount is an autogenerated method
// nolint: dupl
func (u IncomeStockRequestUpdater) SetOrderAmount(orderAmount uint) IncomeStockRequestUpdater {
	u.fields[string(IncomeStockRequestDBSchema.OrderAmount)] = orderAmount
	return u
}

// SetPurchasePrice is an autogenerated method
// nolint: dupl
func (u IncomeStockRequestUpdater) SetPurchasePrice(purchasePrice uint) IncomeStockRequestUpdater {
	u.fields[string(IncomeStockRequestDBSchema.PurchasePrice)] = purchasePrice
	return u
}

// SetReceiptNumber is an autogenerated method
// nolint: dupl
func (u IncomeStockRequestUpdater) SetReceiptNumber(receiptNumber string) IncomeStockRequestUpdater {
	u.fields[string(IncomeStockRequestDBSchema.ReceiptNumber)] = receiptNumber
	return u
}

// SetSKU is an autogenerated method
// nolint: dupl
func (u IncomeStockRequestUpdater) SetSKU(sKU string) IncomeStockRequestUpdater {
	u.fields[string(IncomeStockRequestDBSchema.SKU)] = sKU
	return u
}

// SetTime is an autogenerated method
// nolint: dupl
func (u IncomeStockRequestUpdater) SetTime(time time.Time) IncomeStockRequestUpdater {
	u.fields[string(IncomeStockRequestDBSchema.Time)] = time
	return u
}

// SetTotalPrice is an autogenerated method
// nolint: dupl
func (u IncomeStockRequestUpdater) SetTotalPrice(totalPrice uint) IncomeStockRequestUpdater {
	u.fields[string(IncomeStockRequestDBSchema.TotalPrice)] = totalPrice
	return u
}

// SetUpdatedAt is an autogenerated method
// nolint: dupl
func (u IncomeStockRequestUpdater) SetUpdatedAt(updatedAt time.Time) IncomeStockRequestUpdater {
	u.fields[string(IncomeStockRequestDBSchema.UpdatedAt)] = updatedAt
	return u
}

// TimeEq is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) TimeEq(time time.Time) IncomeStockRequestQuerySet {
	return qs.w(qs.db.Where("time = ?", time))
}

// TimeGt is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) TimeGt(time time.Time) IncomeStockRequestQuerySet {
	return qs.w(qs.db.Where("time > ?", time))
}

// TimeGte is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) TimeGte(time time.Time) IncomeStockRequestQuerySet {
	return qs.w(qs.db.Where("time >= ?", time))
}

// TimeLt is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) TimeLt(time time.Time) IncomeStockRequestQuerySet {
	return qs.w(qs.db.Where("time < ?", time))
}

// TimeLte is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) TimeLte(time time.Time) IncomeStockRequestQuerySet {
	return qs.w(qs.db.Where("time <= ?", time))
}

// TimeNe is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) TimeNe(time time.Time) IncomeStockRequestQuerySet {
	return qs.w(qs.db.Where("time != ?", time))
}

// TotalPriceEq is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) TotalPriceEq(totalPrice uint) IncomeStockRequestQuerySet {
	return qs.w(qs.db.Where("total_price = ?", totalPrice))
}

// TotalPriceGt is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) TotalPriceGt(totalPrice uint) IncomeStockRequestQuerySet {
	return qs.w(qs.db.Where("total_price > ?", totalPrice))
}

// TotalPriceGte is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) TotalPriceGte(totalPrice uint) IncomeStockRequestQuerySet {
	return qs.w(qs.db.Where("total_price >= ?", totalPrice))
}

// TotalPriceIn is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) TotalPriceIn(totalPrice uint, totalPriceRest ...uint) IncomeStockRequestQuerySet {
	iArgs := []interface{}{totalPrice}
	for _, arg := range totalPriceRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("total_price IN (?)", iArgs))
}

// TotalPriceLt is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) TotalPriceLt(totalPrice uint) IncomeStockRequestQuerySet {
	return qs.w(qs.db.Where("total_price < ?", totalPrice))
}

// TotalPriceLte is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) TotalPriceLte(totalPrice uint) IncomeStockRequestQuerySet {
	return qs.w(qs.db.Where("total_price <= ?", totalPrice))
}

// TotalPriceNe is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) TotalPriceNe(totalPrice uint) IncomeStockRequestQuerySet {
	return qs.w(qs.db.Where("total_price != ?", totalPrice))
}

// TotalPriceNotIn is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) TotalPriceNotIn(totalPrice uint, totalPriceRest ...uint) IncomeStockRequestQuerySet {
	iArgs := []interface{}{totalPrice}
	for _, arg := range totalPriceRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("total_price NOT IN (?)", iArgs))
}

// Update is an autogenerated method
// nolint: dupl
func (u IncomeStockRequestUpdater) Update() error {
	return u.db.Updates(u.fields).Error
}

// UpdateNum is an autogenerated method
// nolint: dupl
func (u IncomeStockRequestUpdater) UpdateNum() (int64, error) {
	db := u.db.Updates(u.fields)
	return db.RowsAffected, db.Error
}

// UpdatedAtEq is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) UpdatedAtEq(updatedAt time.Time) IncomeStockRequestQuerySet {
	return qs.w(qs.db.Where("updated_at = ?", updatedAt))
}

// UpdatedAtGt is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) UpdatedAtGt(updatedAt time.Time) IncomeStockRequestQuerySet {
	return qs.w(qs.db.Where("updated_at > ?", updatedAt))
}

// UpdatedAtGte is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) UpdatedAtGte(updatedAt time.Time) IncomeStockRequestQuerySet {
	return qs.w(qs.db.Where("updated_at >= ?", updatedAt))
}

// UpdatedAtLt is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) UpdatedAtLt(updatedAt time.Time) IncomeStockRequestQuerySet {
	return qs.w(qs.db.Where("updated_at < ?", updatedAt))
}

// UpdatedAtLte is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) UpdatedAtLte(updatedAt time.Time) IncomeStockRequestQuerySet {
	return qs.w(qs.db.Where("updated_at <= ?", updatedAt))
}

// UpdatedAtNe is an autogenerated method
// nolint: dupl
func (qs IncomeStockRequestQuerySet) UpdatedAtNe(updatedAt time.Time) IncomeStockRequestQuerySet {
	return qs.w(qs.db.Where("updated_at != ?", updatedAt))
}

// ===== END of query set IncomeStockRequestQuerySet

// ===== BEGIN of IncomeStockRequest modifiers

type incomeStockRequestDBSchemaField string

func (f incomeStockRequestDBSchemaField) String() string {
	return string(f)
}

// IncomeStockRequestDBSchema stores db field names of IncomeStockRequest
var IncomeStockRequestDBSchema = struct {
	Time           incomeStockRequestDBSchemaField
	ID             incomeStockRequestDBSchemaField
	SKU            incomeStockRequestDBSchemaField
	Name           incomeStockRequestDBSchemaField
	CreatedAt      incomeStockRequestDBSchemaField
	UpdatedAt      incomeStockRequestDBSchemaField
	DeletedAt      incomeStockRequestDBSchemaField
	OrderAmount    incomeStockRequestDBSchemaField
	AmountReceived incomeStockRequestDBSchemaField
	PurchasePrice  incomeStockRequestDBSchemaField
	TotalPrice     incomeStockRequestDBSchemaField
	ReceiptNumber  incomeStockRequestDBSchemaField
	Note           incomeStockRequestDBSchemaField
}{

	Time:           incomeStockRequestDBSchemaField("time"),
	ID:             incomeStockRequestDBSchemaField("id"),
	SKU:            incomeStockRequestDBSchemaField("sku"),
	Name:           incomeStockRequestDBSchemaField("name"),
	CreatedAt:      incomeStockRequestDBSchemaField("created_at"),
	UpdatedAt:      incomeStockRequestDBSchemaField("updated_at"),
	DeletedAt:      incomeStockRequestDBSchemaField("deleted_at"),
	OrderAmount:    incomeStockRequestDBSchemaField("order_amount"),
	AmountReceived: incomeStockRequestDBSchemaField("amount_received"),
	PurchasePrice:  incomeStockRequestDBSchemaField("purchase_price"),
	TotalPrice:     incomeStockRequestDBSchemaField("total_price"),
	ReceiptNumber:  incomeStockRequestDBSchemaField("receipt_number"),
	Note:           incomeStockRequestDBSchemaField("note"),
}

// Update updates IncomeStockRequest fields by primary key
func (o *IncomeStockRequest) Update(db *gorm.DB, fields ...incomeStockRequestDBSchemaField) error {
	dbNameToFieldName := map[string]interface{}{
		"time":            o.Time,
		"id":              o.ID,
		"sku":             o.SKU,
		"name":            o.Name,
		"created_at":      o.CreatedAt,
		"updated_at":      o.UpdatedAt,
		"deleted_at":      o.DeletedAt,
		"order_amount":    o.OrderAmount,
		"amount_received": o.AmountReceived,
		"purchase_price":  o.PurchasePrice,
		"total_price":     o.TotalPrice,
		"receipt_number":  o.ReceiptNumber,
		"note":            o.Note,
	}
	u := map[string]interface{}{}
	for _, f := range fields {
		fs := f.String()
		u[fs] = dbNameToFieldName[fs]
	}
	if err := db.Model(o).Updates(u).Error; err != nil {
		if err == gorm.ErrRecordNotFound {
			return err
		}

		return fmt.Errorf("can't update IncomeStockRequest %v fields %v: %s",
			o, fields, err)
	}

	return nil
}

// IncomeStockRequestUpdater is an IncomeStockRequest updates manager
type IncomeStockRequestUpdater struct {
	fields map[string]interface{}
	db     *gorm.DB
}

// NewIncomeStockRequestUpdater creates new IncomeStockRequest updater
func NewIncomeStockRequestUpdater(db *gorm.DB) IncomeStockRequestUpdater {
	return IncomeStockRequestUpdater{
		fields: map[string]interface{}{},
		db:     db.Model(&IncomeStockRequest{}),
	}
}

// ===== END of IncomeStockRequest modifiers

// ===== END of all query sets
