package models

import (
	"fmt"
	"time"

	"github.com/jinzhu/gorm"
)

// ===== BEGIN of all query sets

// ===== BEGIN of query set TotalStockItemQuerySet

// TotalStockItemQuerySet is an queryset type for TotalStockItem
type TotalStockItemQuerySet struct {
	db *gorm.DB
}

// NewTotalStockItemQuerySet constructs new TotalStockItemQuerySet
func NewTotalStockItemQuerySet(db *gorm.DB) TotalStockItemQuerySet {
	return TotalStockItemQuerySet{
		db: db.Model(&TotalStockItem{}),
	}
}

func (qs TotalStockItemQuerySet) w(db *gorm.DB) TotalStockItemQuerySet {
	return NewTotalStockItemQuerySet(db)
}

// All is an autogenerated method
// nolint: dupl
func (qs TotalStockItemQuerySet) All(ret *[]TotalStockItem) error {
	return qs.db.Find(ret).Error
}

// Count is an autogenerated method
// nolint: dupl
func (qs TotalStockItemQuerySet) Count() (int, error) {
	var count int
	err := qs.db.Count(&count).Error
	return count, err
}

// Create is an autogenerated method
// nolint: dupl
func (o *TotalStockItem) Create(db *gorm.DB) error {
	return db.Create(o).Error
}

// CreatedAtEq is an autogenerated method
// nolint: dupl
func (qs TotalStockItemQuerySet) CreatedAtEq(createdAt time.Time) TotalStockItemQuerySet {
	return qs.w(qs.db.Where("created_at = ?", createdAt))
}

// CreatedAtGt is an autogenerated method
// nolint: dupl
func (qs TotalStockItemQuerySet) CreatedAtGt(createdAt time.Time) TotalStockItemQuerySet {
	return qs.w(qs.db.Where("created_at > ?", createdAt))
}

// CreatedAtGte is an autogenerated method
// nolint: dupl
func (qs TotalStockItemQuerySet) CreatedAtGte(createdAt time.Time) TotalStockItemQuerySet {
	return qs.w(qs.db.Where("created_at >= ?", createdAt))
}

// CreatedAtLt is an autogenerated method
// nolint: dupl
func (qs TotalStockItemQuerySet) CreatedAtLt(createdAt time.Time) TotalStockItemQuerySet {
	return qs.w(qs.db.Where("created_at < ?", createdAt))
}

// CreatedAtLte is an autogenerated method
// nolint: dupl
func (qs TotalStockItemQuerySet) CreatedAtLte(createdAt time.Time) TotalStockItemQuerySet {
	return qs.w(qs.db.Where("created_at <= ?", createdAt))
}

// CreatedAtNe is an autogenerated method
// nolint: dupl
func (qs TotalStockItemQuerySet) CreatedAtNe(createdAt time.Time) TotalStockItemQuerySet {
	return qs.w(qs.db.Where("created_at != ?", createdAt))
}

// CurrentStockEq is an autogenerated method
// nolint: dupl
func (qs TotalStockItemQuerySet) CurrentStockEq(currentStock uint) TotalStockItemQuerySet {
	return qs.w(qs.db.Where("current_stock = ?", currentStock))
}

// CurrentStockGt is an autogenerated method
// nolint: dupl
func (qs TotalStockItemQuerySet) CurrentStockGt(currentStock uint) TotalStockItemQuerySet {
	return qs.w(qs.db.Where("current_stock > ?", currentStock))
}

// CurrentStockGte is an autogenerated method
// nolint: dupl
func (qs TotalStockItemQuerySet) CurrentStockGte(currentStock uint) TotalStockItemQuerySet {
	return qs.w(qs.db.Where("current_stock >= ?", currentStock))
}

// CurrentStockIn is an autogenerated method
// nolint: dupl
func (qs TotalStockItemQuerySet) CurrentStockIn(currentStock uint, currentStockRest ...uint) TotalStockItemQuerySet {
	iArgs := []interface{}{currentStock}
	for _, arg := range currentStockRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("current_stock IN (?)", iArgs))
}

// CurrentStockLt is an autogenerated method
// nolint: dupl
func (qs TotalStockItemQuerySet) CurrentStockLt(currentStock uint) TotalStockItemQuerySet {
	return qs.w(qs.db.Where("current_stock < ?", currentStock))
}

// CurrentStockLte is an autogenerated method
// nolint: dupl
func (qs TotalStockItemQuerySet) CurrentStockLte(currentStock uint) TotalStockItemQuerySet {
	return qs.w(qs.db.Where("current_stock <= ?", currentStock))
}

// CurrentStockNe is an autogenerated method
// nolint: dupl
func (qs TotalStockItemQuerySet) CurrentStockNe(currentStock uint) TotalStockItemQuerySet {
	return qs.w(qs.db.Where("current_stock != ?", currentStock))
}

// CurrentStockNotIn is an autogenerated method
// nolint: dupl
func (qs TotalStockItemQuerySet) CurrentStockNotIn(currentStock uint, currentStockRest ...uint) TotalStockItemQuerySet {
	iArgs := []interface{}{currentStock}
	for _, arg := range currentStockRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("current_stock NOT IN (?)", iArgs))
}

// Delete is an autogenerated method
// nolint: dupl
func (qs TotalStockItemQuerySet) Delete() error {
	return qs.db.Delete(TotalStockItem{}).Error
}

// Delete is an autogenerated method
// nolint: dupl
func (o *TotalStockItem) Delete(db *gorm.DB) error {
	return db.Delete(o).Error
}

// DeletedAtEq is an autogenerated method
// nolint: dupl
func (qs TotalStockItemQuerySet) DeletedAtEq(deletedAt time.Time) TotalStockItemQuerySet {
	return qs.w(qs.db.Where("deleted_at = ?", deletedAt))
}

// DeletedAtGt is an autogenerated method
// nolint: dupl
func (qs TotalStockItemQuerySet) DeletedAtGt(deletedAt time.Time) TotalStockItemQuerySet {
	return qs.w(qs.db.Where("deleted_at > ?", deletedAt))
}

// DeletedAtGte is an autogenerated method
// nolint: dupl
func (qs TotalStockItemQuerySet) DeletedAtGte(deletedAt time.Time) TotalStockItemQuerySet {
	return qs.w(qs.db.Where("deleted_at >= ?", deletedAt))
}

// DeletedAtIsNotNull is an autogenerated method
// nolint: dupl
func (qs TotalStockItemQuerySet) DeletedAtIsNotNull() TotalStockItemQuerySet {
	return qs.w(qs.db.Where("deleted_at IS NOT NULL"))
}

// DeletedAtIsNull is an autogenerated method
// nolint: dupl
func (qs TotalStockItemQuerySet) DeletedAtIsNull() TotalStockItemQuerySet {
	return qs.w(qs.db.Where("deleted_at IS NULL"))
}

// DeletedAtLt is an autogenerated method
// nolint: dupl
func (qs TotalStockItemQuerySet) DeletedAtLt(deletedAt time.Time) TotalStockItemQuerySet {
	return qs.w(qs.db.Where("deleted_at < ?", deletedAt))
}

// DeletedAtLte is an autogenerated method
// nolint: dupl
func (qs TotalStockItemQuerySet) DeletedAtLte(deletedAt time.Time) TotalStockItemQuerySet {
	return qs.w(qs.db.Where("deleted_at <= ?", deletedAt))
}

// DeletedAtNe is an autogenerated method
// nolint: dupl
func (qs TotalStockItemQuerySet) DeletedAtNe(deletedAt time.Time) TotalStockItemQuerySet {
	return qs.w(qs.db.Where("deleted_at != ?", deletedAt))
}

// GetUpdater is an autogenerated method
// nolint: dupl
func (qs TotalStockItemQuerySet) GetUpdater() TotalStockItemUpdater {
	return NewTotalStockItemUpdater(qs.db)
}

// IDEq is an autogenerated method
// nolint: dupl
func (qs TotalStockItemQuerySet) IDEq(ID uint) TotalStockItemQuerySet {
	return qs.w(qs.db.Where("id = ?", ID))
}

// IDGt is an autogenerated method
// nolint: dupl
func (qs TotalStockItemQuerySet) IDGt(ID uint) TotalStockItemQuerySet {
	return qs.w(qs.db.Where("id > ?", ID))
}

// IDGte is an autogenerated method
// nolint: dupl
func (qs TotalStockItemQuerySet) IDGte(ID uint) TotalStockItemQuerySet {
	return qs.w(qs.db.Where("id >= ?", ID))
}

// IDIn is an autogenerated method
// nolint: dupl
func (qs TotalStockItemQuerySet) IDIn(ID uint, IDRest ...uint) TotalStockItemQuerySet {
	iArgs := []interface{}{ID}
	for _, arg := range IDRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("id IN (?)", iArgs))
}

// IDLt is an autogenerated method
// nolint: dupl
func (qs TotalStockItemQuerySet) IDLt(ID uint) TotalStockItemQuerySet {
	return qs.w(qs.db.Where("id < ?", ID))
}

// IDLte is an autogenerated method
// nolint: dupl
func (qs TotalStockItemQuerySet) IDLte(ID uint) TotalStockItemQuerySet {
	return qs.w(qs.db.Where("id <= ?", ID))
}

// IDNe is an autogenerated method
// nolint: dupl
func (qs TotalStockItemQuerySet) IDNe(ID uint) TotalStockItemQuerySet {
	return qs.w(qs.db.Where("id != ?", ID))
}

// IDNotIn is an autogenerated method
// nolint: dupl
func (qs TotalStockItemQuerySet) IDNotIn(ID uint, IDRest ...uint) TotalStockItemQuerySet {
	iArgs := []interface{}{ID}
	for _, arg := range IDRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("id NOT IN (?)", iArgs))
}

// Limit is an autogenerated method
// nolint: dupl
func (qs TotalStockItemQuerySet) Limit(limit int) TotalStockItemQuerySet {
	return qs.w(qs.db.Limit(limit))
}

// NameEq is an autogenerated method
// nolint: dupl
func (qs TotalStockItemQuerySet) NameEq(name string) TotalStockItemQuerySet {
	return qs.w(qs.db.Where("name = ?", name))
}

// NameIn is an autogenerated method
// nolint: dupl
func (qs TotalStockItemQuerySet) NameIn(name string, nameRest ...string) TotalStockItemQuerySet {
	iArgs := []interface{}{name}
	for _, arg := range nameRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("name IN (?)", iArgs))
}

// NameNe is an autogenerated method
// nolint: dupl
func (qs TotalStockItemQuerySet) NameNe(name string) TotalStockItemQuerySet {
	return qs.w(qs.db.Where("name != ?", name))
}

// NameNotIn is an autogenerated method
// nolint: dupl
func (qs TotalStockItemQuerySet) NameNotIn(name string, nameRest ...string) TotalStockItemQuerySet {
	iArgs := []interface{}{name}
	for _, arg := range nameRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("name NOT IN (?)", iArgs))
}

// One is used to retrieve one result. It returns gorm.ErrRecordNotFound
// if nothing was fetched
func (qs TotalStockItemQuerySet) One(ret *TotalStockItem) error {
	return qs.db.First(ret).Error
}

// OrderAscByCreatedAt is an autogenerated method
// nolint: dupl
func (qs TotalStockItemQuerySet) OrderAscByCreatedAt() TotalStockItemQuerySet {
	return qs.w(qs.db.Order("created_at ASC"))
}

// OrderAscByCurrentStock is an autogenerated method
// nolint: dupl
func (qs TotalStockItemQuerySet) OrderAscByCurrentStock() TotalStockItemQuerySet {
	return qs.w(qs.db.Order("current_stock ASC"))
}

// OrderAscByDeletedAt is an autogenerated method
// nolint: dupl
func (qs TotalStockItemQuerySet) OrderAscByDeletedAt() TotalStockItemQuerySet {
	return qs.w(qs.db.Order("deleted_at ASC"))
}

// OrderAscByID is an autogenerated method
// nolint: dupl
func (qs TotalStockItemQuerySet) OrderAscByID() TotalStockItemQuerySet {
	return qs.w(qs.db.Order("id ASC"))
}

// OrderAscByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs TotalStockItemQuerySet) OrderAscByUpdatedAt() TotalStockItemQuerySet {
	return qs.w(qs.db.Order("updated_at ASC"))
}

// OrderDescByCreatedAt is an autogenerated method
// nolint: dupl
func (qs TotalStockItemQuerySet) OrderDescByCreatedAt() TotalStockItemQuerySet {
	return qs.w(qs.db.Order("created_at DESC"))
}

// OrderDescByCurrentStock is an autogenerated method
// nolint: dupl
func (qs TotalStockItemQuerySet) OrderDescByCurrentStock() TotalStockItemQuerySet {
	return qs.w(qs.db.Order("current_stock DESC"))
}

// OrderDescByDeletedAt is an autogenerated method
// nolint: dupl
func (qs TotalStockItemQuerySet) OrderDescByDeletedAt() TotalStockItemQuerySet {
	return qs.w(qs.db.Order("deleted_at DESC"))
}

// OrderDescByID is an autogenerated method
// nolint: dupl
func (qs TotalStockItemQuerySet) OrderDescByID() TotalStockItemQuerySet {
	return qs.w(qs.db.Order("id DESC"))
}

// OrderDescByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs TotalStockItemQuerySet) OrderDescByUpdatedAt() TotalStockItemQuerySet {
	return qs.w(qs.db.Order("updated_at DESC"))
}

// SKUEq is an autogenerated method
// nolint: dupl
func (qs TotalStockItemQuerySet) SKUEq(sKU string) TotalStockItemQuerySet {
	return qs.w(qs.db.Where("sku = ?", sKU))
}

// SKUIn is an autogenerated method
// nolint: dupl
func (qs TotalStockItemQuerySet) SKUIn(sKU string, sKURest ...string) TotalStockItemQuerySet {
	iArgs := []interface{}{sKU}
	for _, arg := range sKURest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("sku IN (?)", iArgs))
}

// SKUNe is an autogenerated method
// nolint: dupl
func (qs TotalStockItemQuerySet) SKUNe(sKU string) TotalStockItemQuerySet {
	return qs.w(qs.db.Where("sku != ?", sKU))
}

// SKUNotIn is an autogenerated method
// nolint: dupl
func (qs TotalStockItemQuerySet) SKUNotIn(sKU string, sKURest ...string) TotalStockItemQuerySet {
	iArgs := []interface{}{sKU}
	for _, arg := range sKURest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("sku NOT IN (?)", iArgs))
}

// SetCreatedAt is an autogenerated method
// nolint: dupl
func (u TotalStockItemUpdater) SetCreatedAt(createdAt time.Time) TotalStockItemUpdater {
	u.fields[string(TotalStockItemDBSchema.CreatedAt)] = createdAt
	return u
}

// SetCurrentStock is an autogenerated method
// nolint: dupl
func (u TotalStockItemUpdater) SetCurrentStock(currentStock uint) TotalStockItemUpdater {
	u.fields[string(TotalStockItemDBSchema.CurrentStock)] = currentStock
	return u
}

// SetDeletedAt is an autogenerated method
// nolint: dupl
func (u TotalStockItemUpdater) SetDeletedAt(deletedAt *time.Time) TotalStockItemUpdater {
	u.fields[string(TotalStockItemDBSchema.DeletedAt)] = deletedAt
	return u
}

// SetID is an autogenerated method
// nolint: dupl
func (u TotalStockItemUpdater) SetID(ID uint) TotalStockItemUpdater {
	u.fields[string(TotalStockItemDBSchema.ID)] = ID
	return u
}

// SetName is an autogenerated method
// nolint: dupl
func (u TotalStockItemUpdater) SetName(name string) TotalStockItemUpdater {
	u.fields[string(TotalStockItemDBSchema.Name)] = name
	return u
}

// SetSKU is an autogenerated method
// nolint: dupl
func (u TotalStockItemUpdater) SetSKU(sKU string) TotalStockItemUpdater {
	u.fields[string(TotalStockItemDBSchema.SKU)] = sKU
	return u
}

// SetUpdatedAt is an autogenerated method
// nolint: dupl
func (u TotalStockItemUpdater) SetUpdatedAt(updatedAt time.Time) TotalStockItemUpdater {
	u.fields[string(TotalStockItemDBSchema.UpdatedAt)] = updatedAt
	return u
}

// Update is an autogenerated method
// nolint: dupl
func (u TotalStockItemUpdater) Update() error {
	return u.db.Updates(u.fields).Error
}

// UpdateNum is an autogenerated method
// nolint: dupl
func (u TotalStockItemUpdater) UpdateNum() (int64, error) {
	db := u.db.Updates(u.fields)
	return db.RowsAffected, db.Error
}

// UpdatedAtEq is an autogenerated method
// nolint: dupl
func (qs TotalStockItemQuerySet) UpdatedAtEq(updatedAt time.Time) TotalStockItemQuerySet {
	return qs.w(qs.db.Where("updated_at = ?", updatedAt))
}

// UpdatedAtGt is an autogenerated method
// nolint: dupl
func (qs TotalStockItemQuerySet) UpdatedAtGt(updatedAt time.Time) TotalStockItemQuerySet {
	return qs.w(qs.db.Where("updated_at > ?", updatedAt))
}

// UpdatedAtGte is an autogenerated method
// nolint: dupl
func (qs TotalStockItemQuerySet) UpdatedAtGte(updatedAt time.Time) TotalStockItemQuerySet {
	return qs.w(qs.db.Where("updated_at >= ?", updatedAt))
}

// UpdatedAtLt is an autogenerated method
// nolint: dupl
func (qs TotalStockItemQuerySet) UpdatedAtLt(updatedAt time.Time) TotalStockItemQuerySet {
	return qs.w(qs.db.Where("updated_at < ?", updatedAt))
}

// UpdatedAtLte is an autogenerated method
// nolint: dupl
func (qs TotalStockItemQuerySet) UpdatedAtLte(updatedAt time.Time) TotalStockItemQuerySet {
	return qs.w(qs.db.Where("updated_at <= ?", updatedAt))
}

// UpdatedAtNe is an autogenerated method
// nolint: dupl
func (qs TotalStockItemQuerySet) UpdatedAtNe(updatedAt time.Time) TotalStockItemQuerySet {
	return qs.w(qs.db.Where("updated_at != ?", updatedAt))
}

// ===== END of query set TotalStockItemQuerySet

// ===== BEGIN of TotalStockItem modifiers

type totalStockItemDBSchemaField string

func (f totalStockItemDBSchemaField) String() string {
	return string(f)
}

// TotalStockItemDBSchema stores db field names of TotalStockItem
var TotalStockItemDBSchema = struct {
	ID           totalStockItemDBSchemaField
	SKU          totalStockItemDBSchemaField
	Name         totalStockItemDBSchemaField
	CurrentStock totalStockItemDBSchemaField
	CreatedAt    totalStockItemDBSchemaField
	UpdatedAt    totalStockItemDBSchemaField
	DeletedAt    totalStockItemDBSchemaField
}{

	ID:           totalStockItemDBSchemaField("id"),
	SKU:          totalStockItemDBSchemaField("sku"),
	Name:         totalStockItemDBSchemaField("name"),
	CurrentStock: totalStockItemDBSchemaField("current_stock"),
	CreatedAt:    totalStockItemDBSchemaField("created_at"),
	UpdatedAt:    totalStockItemDBSchemaField("updated_at"),
	DeletedAt:    totalStockItemDBSchemaField("deleted_at"),
}

// Update updates TotalStockItem fields by primary key
func (o *TotalStockItem) Update(db *gorm.DB, fields ...totalStockItemDBSchemaField) error {
	dbNameToFieldName := map[string]interface{}{
		"id":            o.ID,
		"sku":           o.SKU,
		"name":          o.Name,
		"current_stock": o.CurrentStock,
		"created_at":    o.CreatedAt,
		"updated_at":    o.UpdatedAt,
		"deleted_at":    o.DeletedAt,
	}
	u := map[string]interface{}{}
	for _, f := range fields {
		fs := f.String()
		u[fs] = dbNameToFieldName[fs]
	}
	if err := db.Model(o).Updates(u).Error; err != nil {
		if err == gorm.ErrRecordNotFound {
			return err
		}

		return fmt.Errorf("can't update TotalStockItem %v fields %v: %s",
			o, fields, err)
	}

	return nil
}

// TotalStockItemUpdater is an TotalStockItem updates manager
type TotalStockItemUpdater struct {
	fields map[string]interface{}
	db     *gorm.DB
}

// NewTotalStockItemUpdater creates new TotalStockItem updater
func NewTotalStockItemUpdater(db *gorm.DB) TotalStockItemUpdater {
	return TotalStockItemUpdater{
		fields: map[string]interface{}{},
		db:     db.Model(&TotalStockItem{}),
	}
}

// ===== END of TotalStockItem modifiers

// ===== END of all query sets
