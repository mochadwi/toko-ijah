package models

import (
	"fmt"
	"time"

	"github.com/jinzhu/gorm"
)

// ===== BEGIN of all query sets

// ===== BEGIN of query set StockItemQuerySet

// StockItemQuerySet is an queryset type for StockItem
type StockItemQuerySet struct {
	db *gorm.DB
}

// NewStockItemQuerySet constructs new StockItemQuerySet
func NewStockItemQuerySet(db *gorm.DB) StockItemQuerySet {
	return StockItemQuerySet{
		db: db.Model(&StockItem{}),
	}
}

func (qs StockItemQuerySet) w(db *gorm.DB) StockItemQuerySet {
	return NewStockItemQuerySet(db)
}

// All is an autogenerated method
// nolint: dupl
func (qs StockItemQuerySet) All(ret *[]StockItem) error {
	return qs.db.Find(ret).Error
}

// Count is an autogenerated method
// nolint: dupl
func (qs StockItemQuerySet) Count() (int, error) {
	var count int
	err := qs.db.Count(&count).Error
	return count, err
}

// Create is an autogenerated method
// nolint: dupl
func (o *StockItem) Create(db *gorm.DB) error {
	return db.Create(o).Error
}

// CreatedAtEq is an autogenerated method
// nolint: dupl
func (qs StockItemQuerySet) CreatedAtEq(createdAt time.Time) StockItemQuerySet {
	return qs.w(qs.db.Where("created_at = ?", createdAt))
}

// CreatedAtGt is an autogenerated method
// nolint: dupl
func (qs StockItemQuerySet) CreatedAtGt(createdAt time.Time) StockItemQuerySet {
	return qs.w(qs.db.Where("created_at > ?", createdAt))
}

// CreatedAtGte is an autogenerated method
// nolint: dupl
func (qs StockItemQuerySet) CreatedAtGte(createdAt time.Time) StockItemQuerySet {
	return qs.w(qs.db.Where("created_at >= ?", createdAt))
}

// CreatedAtLt is an autogenerated method
// nolint: dupl
func (qs StockItemQuerySet) CreatedAtLt(createdAt time.Time) StockItemQuerySet {
	return qs.w(qs.db.Where("created_at < ?", createdAt))
}

// CreatedAtLte is an autogenerated method
// nolint: dupl
func (qs StockItemQuerySet) CreatedAtLte(createdAt time.Time) StockItemQuerySet {
	return qs.w(qs.db.Where("created_at <= ?", createdAt))
}

// CreatedAtNe is an autogenerated method
// nolint: dupl
func (qs StockItemQuerySet) CreatedAtNe(createdAt time.Time) StockItemQuerySet {
	return qs.w(qs.db.Where("created_at != ?", createdAt))
}

// CurrentStockEq is an autogenerated method
// nolint: dupl
func (qs StockItemQuerySet) CurrentStockEq(currentStock int64) StockItemQuerySet {
	return qs.w(qs.db.Where("current_stock = ?", currentStock))
}

// CurrentStockGt is an autogenerated method
// nolint: dupl
func (qs StockItemQuerySet) CurrentStockGt(currentStock int64) StockItemQuerySet {
	return qs.w(qs.db.Where("current_stock > ?", currentStock))
}

// CurrentStockGte is an autogenerated method
// nolint: dupl
func (qs StockItemQuerySet) CurrentStockGte(currentStock int64) StockItemQuerySet {
	return qs.w(qs.db.Where("current_stock >= ?", currentStock))
}

// CurrentStockIn is an autogenerated method
// nolint: dupl
func (qs StockItemQuerySet) CurrentStockIn(currentStock int64, currentStockRest ...int64) StockItemQuerySet {
	iArgs := []interface{}{currentStock}
	for _, arg := range currentStockRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("current_stock IN (?)", iArgs))
}

// CurrentStockLt is an autogenerated method
// nolint: dupl
func (qs StockItemQuerySet) CurrentStockLt(currentStock int64) StockItemQuerySet {
	return qs.w(qs.db.Where("current_stock < ?", currentStock))
}

// CurrentStockLte is an autogenerated method
// nolint: dupl
func (qs StockItemQuerySet) CurrentStockLte(currentStock int64) StockItemQuerySet {
	return qs.w(qs.db.Where("current_stock <= ?", currentStock))
}

// CurrentStockNe is an autogenerated method
// nolint: dupl
func (qs StockItemQuerySet) CurrentStockNe(currentStock int64) StockItemQuerySet {
	return qs.w(qs.db.Where("current_stock != ?", currentStock))
}

// CurrentStockNotIn is an autogenerated method
// nolint: dupl
func (qs StockItemQuerySet) CurrentStockNotIn(currentStock int64, currentStockRest ...int64) StockItemQuerySet {
	iArgs := []interface{}{currentStock}
	for _, arg := range currentStockRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("current_stock NOT IN (?)", iArgs))
}

// Delete is an autogenerated method
// nolint: dupl
func (qs StockItemQuerySet) Delete() error {
	return qs.db.Delete(StockItem{}).Error
}

// Delete is an autogenerated method
// nolint: dupl
func (o *StockItem) Delete(db *gorm.DB) error {
	return db.Delete(o).Error
}

// DeletedAtEq is an autogenerated method
// nolint: dupl
func (qs StockItemQuerySet) DeletedAtEq(deletedAt time.Time) StockItemQuerySet {
	return qs.w(qs.db.Where("deleted_at = ?", deletedAt))
}

// DeletedAtGt is an autogenerated method
// nolint: dupl
func (qs StockItemQuerySet) DeletedAtGt(deletedAt time.Time) StockItemQuerySet {
	return qs.w(qs.db.Where("deleted_at > ?", deletedAt))
}

// DeletedAtGte is an autogenerated method
// nolint: dupl
func (qs StockItemQuerySet) DeletedAtGte(deletedAt time.Time) StockItemQuerySet {
	return qs.w(qs.db.Where("deleted_at >= ?", deletedAt))
}

// DeletedAtIsNotNull is an autogenerated method
// nolint: dupl
func (qs StockItemQuerySet) DeletedAtIsNotNull() StockItemQuerySet {
	return qs.w(qs.db.Where("deleted_at IS NOT NULL"))
}

// DeletedAtIsNull is an autogenerated method
// nolint: dupl
func (qs StockItemQuerySet) DeletedAtIsNull() StockItemQuerySet {
	return qs.w(qs.db.Where("deleted_at IS NULL"))
}

// DeletedAtLt is an autogenerated method
// nolint: dupl
func (qs StockItemQuerySet) DeletedAtLt(deletedAt time.Time) StockItemQuerySet {
	return qs.w(qs.db.Where("deleted_at < ?", deletedAt))
}

// DeletedAtLte is an autogenerated method
// nolint: dupl
func (qs StockItemQuerySet) DeletedAtLte(deletedAt time.Time) StockItemQuerySet {
	return qs.w(qs.db.Where("deleted_at <= ?", deletedAt))
}

// DeletedAtNe is an autogenerated method
// nolint: dupl
func (qs StockItemQuerySet) DeletedAtNe(deletedAt time.Time) StockItemQuerySet {
	return qs.w(qs.db.Where("deleted_at != ?", deletedAt))
}

// GetUpdater is an autogenerated method
// nolint: dupl
func (qs StockItemQuerySet) GetUpdater() StockItemUpdater {
	return NewStockItemUpdater(qs.db)
}

// IDEq is an autogenerated method
// nolint: dupl
func (qs StockItemQuerySet) IDEq(ID uint) StockItemQuerySet {
	return qs.w(qs.db.Where("id = ?", ID))
}

// IDGt is an autogenerated method
// nolint: dupl
func (qs StockItemQuerySet) IDGt(ID uint) StockItemQuerySet {
	return qs.w(qs.db.Where("id > ?", ID))
}

// IDGte is an autogenerated method
// nolint: dupl
func (qs StockItemQuerySet) IDGte(ID uint) StockItemQuerySet {
	return qs.w(qs.db.Where("id >= ?", ID))
}

// IDIn is an autogenerated method
// nolint: dupl
func (qs StockItemQuerySet) IDIn(ID uint, IDRest ...uint) StockItemQuerySet {
	iArgs := []interface{}{ID}
	for _, arg := range IDRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("id IN (?)", iArgs))
}

// IDLt is an autogenerated method
// nolint: dupl
func (qs StockItemQuerySet) IDLt(ID uint) StockItemQuerySet {
	return qs.w(qs.db.Where("id < ?", ID))
}

// IDLte is an autogenerated method
// nolint: dupl
func (qs StockItemQuerySet) IDLte(ID uint) StockItemQuerySet {
	return qs.w(qs.db.Where("id <= ?", ID))
}

// IDNe is an autogenerated method
// nolint: dupl
func (qs StockItemQuerySet) IDNe(ID uint) StockItemQuerySet {
	return qs.w(qs.db.Where("id != ?", ID))
}

// IDNotIn is an autogenerated method
// nolint: dupl
func (qs StockItemQuerySet) IDNotIn(ID uint, IDRest ...uint) StockItemQuerySet {
	iArgs := []interface{}{ID}
	for _, arg := range IDRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("id NOT IN (?)", iArgs))
}

// Limit is an autogenerated method
// nolint: dupl
func (qs StockItemQuerySet) Limit(limit int) StockItemQuerySet {
	return qs.w(qs.db.Limit(limit))
}

// NameEq is an autogenerated method
// nolint: dupl
func (qs StockItemQuerySet) NameEq(name string) StockItemQuerySet {
	return qs.w(qs.db.Where("name = ?", name))
}

// NameIn is an autogenerated method
// nolint: dupl
func (qs StockItemQuerySet) NameIn(name string, nameRest ...string) StockItemQuerySet {
	iArgs := []interface{}{name}
	for _, arg := range nameRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("name IN (?)", iArgs))
}

// NameNe is an autogenerated method
// nolint: dupl
func (qs StockItemQuerySet) NameNe(name string) StockItemQuerySet {
	return qs.w(qs.db.Where("name != ?", name))
}

// NameNotIn is an autogenerated method
// nolint: dupl
func (qs StockItemQuerySet) NameNotIn(name string, nameRest ...string) StockItemQuerySet {
	iArgs := []interface{}{name}
	for _, arg := range nameRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("name NOT IN (?)", iArgs))
}

// One is used to retrieve one result. It returns gorm.ErrRecordNotFound
// if nothing was fetched
func (qs StockItemQuerySet) One(ret *StockItem) error {
	return qs.db.First(ret).Error
}

// OrderAscByCreatedAt is an autogenerated method
// nolint: dupl
func (qs StockItemQuerySet) OrderAscByCreatedAt() StockItemQuerySet {
	return qs.w(qs.db.Order("created_at ASC"))
}

// OrderAscByCurrentStock is an autogenerated method
// nolint: dupl
func (qs StockItemQuerySet) OrderAscByCurrentStock() StockItemQuerySet {
	return qs.w(qs.db.Order("current_stock ASC"))
}

// OrderAscByDeletedAt is an autogenerated method
// nolint: dupl
func (qs StockItemQuerySet) OrderAscByDeletedAt() StockItemQuerySet {
	return qs.w(qs.db.Order("deleted_at ASC"))
}

// OrderAscByID is an autogenerated method
// nolint: dupl
func (qs StockItemQuerySet) OrderAscByID() StockItemQuerySet {
	return qs.w(qs.db.Order("id ASC"))
}

// OrderAscByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs StockItemQuerySet) OrderAscByUpdatedAt() StockItemQuerySet {
	return qs.w(qs.db.Order("updated_at ASC"))
}

// OrderDescByCreatedAt is an autogenerated method
// nolint: dupl
func (qs StockItemQuerySet) OrderDescByCreatedAt() StockItemQuerySet {
	return qs.w(qs.db.Order("created_at DESC"))
}

// OrderDescByCurrentStock is an autogenerated method
// nolint: dupl
func (qs StockItemQuerySet) OrderDescByCurrentStock() StockItemQuerySet {
	return qs.w(qs.db.Order("current_stock DESC"))
}

// OrderDescByDeletedAt is an autogenerated method
// nolint: dupl
func (qs StockItemQuerySet) OrderDescByDeletedAt() StockItemQuerySet {
	return qs.w(qs.db.Order("deleted_at DESC"))
}

// OrderDescByID is an autogenerated method
// nolint: dupl
func (qs StockItemQuerySet) OrderDescByID() StockItemQuerySet {
	return qs.w(qs.db.Order("id DESC"))
}

// OrderDescByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs StockItemQuerySet) OrderDescByUpdatedAt() StockItemQuerySet {
	return qs.w(qs.db.Order("updated_at DESC"))
}

// SKUEq is an autogenerated method
// nolint: dupl
func (qs StockItemQuerySet) SKUEq(sKU string) StockItemQuerySet {
	return qs.w(qs.db.Where("sku = ?", sKU))
}

// SKUIn is an autogenerated method
// nolint: dupl
func (qs StockItemQuerySet) SKUIn(sKU string, sKURest ...string) StockItemQuerySet {
	iArgs := []interface{}{sKU}
	for _, arg := range sKURest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("sku IN (?)", iArgs))
}

// SKUNe is an autogenerated method
// nolint: dupl
func (qs StockItemQuerySet) SKUNe(sKU string) StockItemQuerySet {
	return qs.w(qs.db.Where("sku != ?", sKU))
}

// SKUNotIn is an autogenerated method
// nolint: dupl
func (qs StockItemQuerySet) SKUNotIn(sKU string, sKURest ...string) StockItemQuerySet {
	iArgs := []interface{}{sKU}
	for _, arg := range sKURest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("sku NOT IN (?)", iArgs))
}

// SetCreatedAt is an autogenerated method
// nolint: dupl
func (u StockItemUpdater) SetCreatedAt(createdAt time.Time) StockItemUpdater {
	u.fields[string(StockItemDBSchema.CreatedAt)] = createdAt
	return u
}

// SetCurrentStock is an autogenerated method
// nolint: dupl
func (u StockItemUpdater) SetCurrentStock(currentStock int64) StockItemUpdater {
	u.fields[string(StockItemDBSchema.CurrentStock)] = currentStock
	return u
}

// SetDeletedAt is an autogenerated method
// nolint: dupl
func (u StockItemUpdater) SetDeletedAt(deletedAt *time.Time) StockItemUpdater {
	u.fields[string(StockItemDBSchema.DeletedAt)] = deletedAt
	return u
}

// SetID is an autogenerated method
// nolint: dupl
func (u StockItemUpdater) SetID(ID uint) StockItemUpdater {
	u.fields[string(StockItemDBSchema.ID)] = ID
	return u
}

// SetName is an autogenerated method
// nolint: dupl
func (u StockItemUpdater) SetName(name string) StockItemUpdater {
	u.fields[string(StockItemDBSchema.Name)] = name
	return u
}

// SetSKU is an autogenerated method
// nolint: dupl
func (u StockItemUpdater) SetSKU(sKU string) StockItemUpdater {
	u.fields[string(StockItemDBSchema.SKU)] = sKU
	return u
}

// SetUpdatedAt is an autogenerated method
// nolint: dupl
func (u StockItemUpdater) SetUpdatedAt(updatedAt time.Time) StockItemUpdater {
	u.fields[string(StockItemDBSchema.UpdatedAt)] = updatedAt
	return u
}

// Update is an autogenerated method
// nolint: dupl
func (u StockItemUpdater) Update() error {
	return u.db.Updates(u.fields).Error
}

// UpdateNum is an autogenerated method
// nolint: dupl
func (u StockItemUpdater) UpdateNum() (int64, error) {
	db := u.db.Updates(u.fields)
	return db.RowsAffected, db.Error
}

// UpdatedAtEq is an autogenerated method
// nolint: dupl
func (qs StockItemQuerySet) UpdatedAtEq(updatedAt time.Time) StockItemQuerySet {
	return qs.w(qs.db.Where("updated_at = ?", updatedAt))
}

// UpdatedAtGt is an autogenerated method
// nolint: dupl
func (qs StockItemQuerySet) UpdatedAtGt(updatedAt time.Time) StockItemQuerySet {
	return qs.w(qs.db.Where("updated_at > ?", updatedAt))
}

// UpdatedAtGte is an autogenerated method
// nolint: dupl
func (qs StockItemQuerySet) UpdatedAtGte(updatedAt time.Time) StockItemQuerySet {
	return qs.w(qs.db.Where("updated_at >= ?", updatedAt))
}

// UpdatedAtLt is an autogenerated method
// nolint: dupl
func (qs StockItemQuerySet) UpdatedAtLt(updatedAt time.Time) StockItemQuerySet {
	return qs.w(qs.db.Where("updated_at < ?", updatedAt))
}

// UpdatedAtLte is an autogenerated method
// nolint: dupl
func (qs StockItemQuerySet) UpdatedAtLte(updatedAt time.Time) StockItemQuerySet {
	return qs.w(qs.db.Where("updated_at <= ?", updatedAt))
}

// UpdatedAtNe is an autogenerated method
// nolint: dupl
func (qs StockItemQuerySet) UpdatedAtNe(updatedAt time.Time) StockItemQuerySet {
	return qs.w(qs.db.Where("updated_at != ?", updatedAt))
}

// ===== END of query set StockItemQuerySet

// ===== BEGIN of StockItem modifiers

type stockItemDBSchemaField string

func (f stockItemDBSchemaField) String() string {
	return string(f)
}

// StockItemDBSchema stores db field names of StockItem
var StockItemDBSchema = struct {
	ID           stockItemDBSchemaField
	SKU          stockItemDBSchemaField
	Name         stockItemDBSchemaField
	CurrentStock stockItemDBSchemaField
	CreatedAt    stockItemDBSchemaField
	UpdatedAt    stockItemDBSchemaField
	DeletedAt    stockItemDBSchemaField
}{

	ID:           stockItemDBSchemaField("id"),
	SKU:          stockItemDBSchemaField("sku"),
	Name:         stockItemDBSchemaField("name"),
	CurrentStock: stockItemDBSchemaField("current_stock"),
	CreatedAt:    stockItemDBSchemaField("created_at"),
	UpdatedAt:    stockItemDBSchemaField("updated_at"),
	DeletedAt:    stockItemDBSchemaField("deleted_at"),
}

// Update updates StockItem fields by primary key
func (o *StockItem) Update(db *gorm.DB, fields ...stockItemDBSchemaField) error {
	dbNameToFieldName := map[string]interface{}{
		"id":            o.ID,
		"sku":           o.SKU,
		"name":          o.Name,
		"current_stock": o.CurrentStock,
		"created_at":    o.CreatedAt,
		"updated_at":    o.UpdatedAt,
		"deleted_at":    o.DeletedAt,
	}
	u := map[string]interface{}{}
	for _, f := range fields {
		fs := f.String()
		u[fs] = dbNameToFieldName[fs]
	}
	if err := db.Model(o).Updates(u).Error; err != nil {
		if err == gorm.ErrRecordNotFound {
			return err
		}

		return fmt.Errorf("can't update StockItem %v fields %v: %s",
			o, fields, err)
	}

	return nil
}

// StockItemUpdater is an StockItem updates manager
type StockItemUpdater struct {
	fields map[string]interface{}
	db     *gorm.DB
}

// NewStockItemUpdater creates new StockItem updater
func NewStockItemUpdater(db *gorm.DB) StockItemUpdater {
	return StockItemUpdater{
		fields: map[string]interface{}{},
		db:     db.Model(&StockItem{}),
	}
}

// ===== END of StockItem modifiers

// ===== END of all query sets
